// <auto-generated />
using EFcrud.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleAppEFwoensdagCRUD.Migrations
{
    [DbContext(typeof(StripsContext))]
    partial class StripsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuteurStrip", b =>
                {
                    b.Property<int>("AuteursAuteurID")
                        .HasColumnType("int");

                    b.Property<int>("StripsStripID")
                        .HasColumnType("int");

                    b.HasKey("AuteursAuteurID", "StripsStripID");

                    b.HasIndex("StripsStripID");

                    b.ToTable("AuteurStrip");
                });

            modelBuilder.Entity("EFcrud.Model.Auteur", b =>
                {
                    b.Property<int>("AuteurID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuteurID"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuteurID");

                    b.ToTable("Auteurs");
                });

            modelBuilder.Entity("EFcrud.Model.Reeks", b =>
                {
                    b.Property<int>("ReeksID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReeksID"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReeksID");

                    b.ToTable("Reeksen");
                });

            modelBuilder.Entity("EFcrud.Model.Strip", b =>
                {
                    b.Property<int>("StripID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StripID"));

                    b.Property<int>("Nr")
                        .HasColumnType("int");

                    b.Property<int>("ReeksID")
                        .HasColumnType("int");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UitgeverijID")
                        .HasColumnType("int");

                    b.HasKey("StripID");

                    b.HasIndex("ReeksID");

                    b.HasIndex("UitgeverijID");

                    b.ToTable("Strips");
                });

            modelBuilder.Entity("EFcrud.Model.Uitgeverij", b =>
                {
                    b.Property<int>("UitgeverijID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UitgeverijID"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UitgeverijID");

                    b.ToTable("Uitgeverijen");
                });

            modelBuilder.Entity("AuteurStrip", b =>
                {
                    b.HasOne("EFcrud.Model.Auteur", null)
                        .WithMany()
                        .HasForeignKey("AuteursAuteurID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFcrud.Model.Strip", null)
                        .WithMany()
                        .HasForeignKey("StripsStripID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFcrud.Model.Strip", b =>
                {
                    b.HasOne("EFcrud.Model.Reeks", "Reeks")
                        .WithMany("Strips")
                        .HasForeignKey("ReeksID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFcrud.Model.Uitgeverij", "Uitgever")
                        .WithMany()
                        .HasForeignKey("UitgeverijID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reeks");

                    b.Navigation("Uitgever");
                });

            modelBuilder.Entity("EFcrud.Model.Reeks", b =>
                {
                    b.Navigation("Strips");
                });
#pragma warning restore 612, 618
        }
    }
}
